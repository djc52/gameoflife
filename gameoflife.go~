// Conway's Game of Life program
package main

import (
	"bufio"
	"fmt"
	"os"
	//	"io"
	//	"errors"
	"strings"
)

func main() { 
	width, height := askWidthHeight()
	width, height = askCells()
	fmt.Printf("\n\nIn main(): w %d h %d\n\n", width, height)
}

// ask the user for the width and height of the game
func askWidthHeight() (int, int) {
	reader := bufio.NewReader(os.Stdin)
	fmt.Printf("\n\n\t\t****** Welcome to Conways Game of Life *****\n\n")
	fmt.Printf("yadda\n   yadda\n       yadda\n\n")
	fmt.Printf("(if at any time you want to exit - type q to quit)\n\n")

	var width, height int

	goodRead := false
	for goodRead == false {
		fmt.Printf("\nEnter the grid width and height and hit enter (e.g., 100 50): ")
		str, err := reader.ReadString('\n')

		// if there is an error on read - exit - since we should always be able to read string
		if err != nil {
			fmt.Printf("\n\nBadRead - exiting\n\n")
			os.Exit(1)
			return 0, 0
		}

		// if the user enters "q" say goodbye and exit
		if str == "q" || str == "q\n" {
			fmt.Printf("\n\n\t\t   ***** Goodbye *****\n\n")
			os.Exit(1)
			return 0, 0
		}

		// parse the string
		num, err2 := fmt.Sscan(str, &width, &height)

		// if it is not two integers, allow for loop to ask again
		if err2 != nil || num != 2 {
			fmt.Printf("\nBad Input, try again (or type q to quit)\n")
		} else {
			goodRead = true
		}
	}
	fmt.Printf("\n\nw %d h %d\n\n", width, height)
	return width, height
}

// ask the user which cells have life
func askCells() ([]int, []int) {

	reader := bufio.NewReader(os.Stdin)
	xCoords := make([]int,50) 
	xCoords := make([]int,50)
	goodRead := false
	for goodRead == false {
		fmt.Printf("\nEnter the cells that are alive x1 y1 x2 y2 (e.g., 20 20 21 20 22 20): ")
		str, err := reader.ReadString('\n')

		// if there is an error on read - exit - since we should always be able to read string
		if err != nil {
			fmt.Printf("\n\nBadRead - exiting\n\n")
			os.Exit(1)
			return nil, nil
		}

		// if the user enters "q" say goodbye and exit
		if str == "q" || str == "q\n" {
			fmt.Printf("\n\n\t\t   ***** Goodbye *****\n\n")
			os.Exit(1)
			return nil, nil
		}

		// parse the string
		
		goodRead := false
		for goodRead == false 

		subStrings := strings.Fields(str)

		if subStrings == nil || subStrings.IsEmpty() == true {
			fmt.Printf("\nBad Input, try again (or type q to quit)\n")
		} else {
			coordIndex := 0
			coordValue := 0
			error err3
			for ix, subString := range subStrings {
				coordValue, err3 = strconv.Atoi(subString)
				if err3 != nil {
				}
			}
		}
	}
	fmt.Printf("\n\nw %d h %d\n\n", width, height)
	return width, height
}

/*
	cell1 := new(Cell)
	cell2 := NewCell(20, 30)
	fmt.Println(cell1)
	fmt.Println(cell2)

*/
